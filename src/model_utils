# ðŸ“Œ model_utils.py
# Funciones para el entrenamiento y evaluaciÃ³n de modelos

import numpy as np
import pandas as pd
import joblib
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt

def train_naive_bayes(X_train, y_train):
    """Entrena un modelo NaÃ¯ve Bayes y lo guarda en un archivo."""
    model = GaussianNB()
    model.fit(X_train, y_train)
    joblib.dump(model, "final_model.pkl")
    print("âœ… Modelo NaÃ¯ve Bayes entrenado y guardado como final_model.pkl")
    return model

def evaluate_model(model, X_test, y_test):
    """EvalÃºa el modelo NaÃ¯ve Bayes y muestra mÃ©tricas clave."""
    y_pred = model.predict(X_test)
    accuracy = accuracy_score(y_test, y_pred)
    print(f"ðŸ”¹ PrecisiÃ³n del modelo: {accuracy:.4f}")
    print("ðŸ“„ Reporte de ClasificaciÃ³n:")
    print(classification_report(y_test, y_pred))
    
    # ðŸ“Š Matriz de confusiÃ³n
    conf_matrix = confusion_matrix(y_test, y_pred)
    plt.figure(figsize=(6,6))
    sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=['Clase 0', 'Clase 1'], yticklabels=['Clase 0', 'Clase 1'])
    plt.xlabel("PredicciÃ³n")
    plt.ylabel("Real")
    plt.title("Matriz de ConfusiÃ³n")
    plt.show()
    
    return accuracy

# Ejemplo de uso:
# model = train_naive_bayes(X_train, y_train)
# evaluate_model(model, X_test, y_test)
